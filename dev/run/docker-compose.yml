services:
  settings-app:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: settings-dev
    env_file:
      - ./test-pcs.env
      - ./test-pcs.secret.env
      - ./test-ynd.user.env
    ports:
      - "4342:80"
    volumes:
      - ssh_keys:/host_ssh/
      - data:/app/data/
    environment:
      - HOST_ADDRESS=ubuntu-server
    networks:
      - app-network
    depends_on:
      - ubuntu-host-pcs

  #PCS emulation
  ubuntu-host-pcs:
    build: .
    container_name: ubuntu-host-pcs
    hostname: ubuntu-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ssh_keys:/root/.ssh/
      - data:/DATA/AppData/casaos/apps/yundera/
      - ./template-root/root/:/tmp/setup/:ro
      - ./test-pcs.env:/tmp/.pcs.env:ro
      - ./test-pcs.secret.env:/tmp/.pcs.secret.env:ro
      - ./test-ynd.user.env:/tmp/.ynd.user.env:ro

    # this command simulate what the pcs orchestrator does to prepare the vm
    command: >
      bash -c "
            mkdir -p /DATA/AppData/casaos/apps/yundera/
            cp -v -r /tmp/setup/* /DATA/AppData/casaos/apps/yundera/ &&
            cp -v /tmp/.pcs.env /DATA/AppData/casaos/apps/yundera/.pcs.env &&
            cp -v /tmp/.pcs.secret.env /DATA/AppData/casaos/apps/yundera/.pcs.secret.env &&
            cp -v /tmp/.ynd.user.env /DATA/AppData/casaos/apps/yundera/.ynd.user.env &&
            chmod +x /DATA/AppData/casaos/apps/yundera/scripts/self-check/ensure-template-sync.sh &&
            /DATA/AppData/casaos/apps/yundera/scripts/self-check/ensure-template-sync.sh &&
            chmod +x /DATA/AppData/casaos/apps/yundera/scripts/tools/os-init.sh &&
            /DATA/AppData/casaos/apps/yundera/scripts/tools/os-init.sh &&
            service ssh start &&
            tail -f /dev/null
          "
    networks:
      - app-network

volumes:
  ssh_keys:
  data:

networks:
  app-network:
    driver: bridge